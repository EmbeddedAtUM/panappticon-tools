#!/usr/bin/env python

import datetime
import heapq
import os
import subprocess

import functools as ft
import itertools as it

try:
    import ujson as json
except:
    import json

@ft.total_ordering # Requires Python 2.7+/3.2+
class ComparableEvent(object):
    
    def __init__(self, encoded):
        self.json = encoded
        data = json.loads(encoded)
        self.timestamp = datetime.datetime.fromtimestamp(data['time']['sec']).replace(microsecond=data['time']['usec'])

    def __eq__(self, other):
        return self.timestamp == other.timestamp

    def __lt__(self, other):
        return self.timestamp < other.timestamp

def open_gzip(fname):
    p = subprocess.Popen(["zcat", fname], stdout = subprocess.PIPE)
    return p.stdout

def open_file(fname):
    if fname.endswith(".gz"):
        return open_gzip(fname)
    else:
        return open(fname, 'r')

def main(istreams, ostream):
    cmp_streams = [it.imap(ComparableEvent, stream) for stream in istreams]
    sorted_stream = heapq.merge(*cmp_streams)
    for event in sorted_stream:
        ostream.write(event.json)

if __name__ == "__main__":
    import sys

    istreams = [open_file(f) for f in sys.argv[1:]]
    ostream = sys.stdout

    main(istreams, ostream)
